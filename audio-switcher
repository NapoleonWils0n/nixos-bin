#!/bin/sh

#===============================================================================
# audio-switcher
# switch audio input and ouput devices
#===============================================================================

# dependencies:
# wpctl


#===============================================================================
# script usage
#===============================================================================

usage () {
# if argument passed to function echo it
[ -z "${1}" ] || echo "! ${1}"
# display help
echo "\
$(basename "$0") -i mic|yeti -o laptop|soundsticks"
exit 2
}


#===============================================================================
# error messages
#===============================================================================

INVALID_OPT_ERR='Invalid option:'
REQ_ARG_ERR='requires an argument'
WRONG_ARGS_ERR='wrong number of arguments passed to script'


#===============================================================================
# check the number of arguments passed to the script
#===============================================================================

[ $# -ne 0 ] || usage "${WRONG_ARGS_ERR}"



#===============================================================================
# getopts check the options passed to the script
#===============================================================================

while getopts ':i:o:h' opt
do
  case ${opt} in
     i) input="${OPTARG}";;
     o) output="${OPTARG}";;
     h) usage;;
     \?) usage "${INVALID_OPT_ERR} ${OPTARG}" 1>&2;;
     :) usage "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2;;
  esac
done
shift $((OPTIND-1))


#===============================================================================
# functions
#===============================================================================


#===============================================================================
# audio source - input
#===============================================================================

audiosource () {
wpctl set-default-source $(wpctl status | awk '
  /Sources:/ { in_sources = 1; next }
  /Filters:/ { in_sources = 0 } # Or /Streams:/ if Filters is not the next section
  in_sources && $0 ~ /'"${1}"'/ {
    match($0, /[0-9]+/); # Find the first sequence of digits
    print substr($0, RSTART, RLENGTH); # Print the matched digits
    exit;
  }
')
}


#===============================================================================
# audio sink - output
#===============================================================================

audiosink () {
wpctl set-default $(wpctl status | awk '
  /Sinks:/ { in_sinks = 1; next }
  /Sources:/ { in_sinks = 0 }
  in_sinks && $0 ~ /'"${1}"'/ {
    match($0, /[0-9]+/); # Find the first sequence of digits
    print substr($0, RSTART, RLENGTH); # Print the matched digits
    exit;
  }
')
}


#===============================================================================
# audiosource
#===============================================================================

case "${input}" in
    mic) audiosource mic;; 
    yeti) audiosource yeti;;
esac


#===============================================================================
# audiosink
#===============================================================================


case "${output}" in
    laptop) audiosink laptop;; 
    speakers) audiosink speakers;;
esac
