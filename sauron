#!/bin/sh

# sauron - external video player script for ytfzf

# if script is run without arguments exit
[ $# -gt 0 ] || exit

# input set to args passed to script
input=$(printf "%s\n" "$@")


# mpd and taskspooler
audio() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      tsp pinch -i "${line}" 1>/dev/null 
    done
}

# copy url to the clipboard
copy() {
    printf "%s\n" "${input}" | xclip -i -selection clipboard 1>/dev/null
}

# download with yt-dlp
download() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      ts \
      yt-dlp \
      --no-playlist \
      -f 'bestvideo[height<=1080][vcodec!=?vp9]+bestaudio[acodec!=?opus]' \
      -o "$HOME/Downloads/%(title)s.%(ext)s" \
      "${line}" 1>/dev/null
    done
}

# open link in browser
open() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      xdg-open "${line}" 1>/dev/null 
    done
}

# download with yt-dlp with sponsorblock to remove sponsor
sponsorblock_download() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      ts \
      yt-dlp \
      --no-playlist \
      --sponsorblock-remove all \
      -f 'bestvideo[height<=1080][vcodec!=?vp9]+bestaudio[acodec!=?opus]' \
      -o "$HOME/Downloads/%(title)s.%(ext)s" \
      "${line}" 1>/dev/null
    done
}

# mpv fullscreen on second display and taskspooler
fullscreen() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      ts mpv --no-terminal --fs "${line}" 1>/dev/null 
    done
}

# mpv and taskspooler
video() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      ts mpv --no-terminal "${line}" 1>/dev/null
    done
}


# streamlink download
streamlink() {
    printf "%s\n" "${input}" | \
    while read -r line
    do
      ts streamlink -o "${HOME}/Downloads/{title}-{time}.mkv" "${line}" 1080p,720p 1>/dev/null
    done
}

# fzf prompt variables spaces to line up menu options
audio_ts='audio        - mpd play audio'
copy='copy         - copy url'
download_ts='download     - yt-dlp download links'
open='open         - open link in browser'
sponsorblock_ts='sponsorblock - sponsorblock yt-dlp'
fullscreen_ts='fullscreen   - mpv play fullscreen on second display'
video_ts='video        - mpv play video on current display'
streamlink_ts='streamlink   - streamlink download'

# fzf prompt to specify function to run on links from ytfzf
menu=$(printf "%s\n" \
	      "${audio_ts}" \
	      "${copy}" \
	      "${download_ts}" \
	      "${open}" \
	      "${sponsorblock_ts}" \
	      "${fullscreen_ts}" \
	      "${video_ts}" \
	      "${streamlink_ts}" \
	      | fzf --delimiter='\n' --prompt='Pipe links to: ' --info=inline --layout=reverse --no-multi)

# case statement to run function based on fzf prompt output
case "${menu}" in
   audio*) audio;;
   copy*) copy;;
   download*) download;;
   open*) open;;
   sponsor*)sponsorblock_download ;;
   fullscreen*) fullscreen;;
   video*) video;;
   streamlink*) streamlink;;
   *) exit;;
esac
